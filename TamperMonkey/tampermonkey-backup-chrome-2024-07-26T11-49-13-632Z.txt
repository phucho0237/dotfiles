{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Bypass All Shortlinks Debloated","options":{"check_for_updates":true,"user_modified":null,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_powerful_this":null,"sandbox":null,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"use_includes":[],"orig_includes":["/^(https?:\\/\\/)(.+)?(go.link4rev.site|go.urlcash.site)(\\/.*)/","/^(https?:\\/\\/)(.+)?(link.birdurls.com|link.owllink.net|link.illink.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?((teachsansar|technicalatg|foodxor).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((desbloquea|drivelinks).me|(acortame-esto|recorta-enlace|enlace-protegido|super-enlace).com|short-info.link)(\\/.*)/","/^(https?:\\/\\/)(.+)?(appdrive\\.*)/","/^(https?:\\/\\/)(.+)?(userscloud.com|dosya.co)(\\/.*)/","/^(https?:\\/\\/)(.+)?(oxy\\.*)/","/^(https?:\\/\\/)(.+)?(gdtot\\.*)/","/^(https?:\\/\\/)(.+)?(hxfile.co|ex-load.com|megadb.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?(upload-4ever.com|up-4ever.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?((uploadrar|fingau|getpczone|wokaz).com|uptomega.me)(\\/.*)/","/^(https?:\\/\\/)(.+)?(usersdrive.com|ddownload.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((kusonime|oploverz).org|(opinimedia|beritaotaku|caramasak).com|otakudesu.cc|resepkoki.net|neonime\\.*)/","/^(https?:\\/\\/)(.+)?(clickndownload.org|clicknupload\\.*)/","/^(https?:\\/\\/)(.+)?(file-upload.com|file-upload.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?((thecubexguide|miuiflash).com|(djxmaza|jytechs).in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(proappapk.com|meclipstudy.in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cooklike.info|model-tas-terbaru.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(delishwell.com|artiskini.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(bildirim.in|bildirim.eu|bildirim.link)(\\/.*)/","/^(https?:\\/\\/)(.+)?(michaelemad.com|7misr4day.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(gobits.me|zcash.one|clickscoin.com|beycoin.xyz|bitsusdt.com|adsluffa.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?((cutnet|cutsy|cutlink).net|(cutty|exego|cety).app|gamco.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?(cryptomonitor.in|2the.space|imbb.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?((newsbawa|utkarshonlinetest|techbezzie).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((blackleadr|shortcuthigh|newztalkies|cybertyrant).com|hubdrive.me|fileroot.net|nzarticles.pro)(\\/.*)/","/^(https?:\\/\\/)(.+)?(bitzite.com|cryptoad.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?((tinycmd|tinybc).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(coingraph.us|eblog.pro|writeprofit.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?(techanalyzer.eu|(miner-sim|networkhint|askpaccosi).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(nullscript.info|freebinance.top)(\\/.*)/","/^(https?:\\/\\/)(.+)?((10short|lollty).pro|mamahawa.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((aduzz|cryptfaucet|neverdims).com|(bitcrypto|bit4me).info|(deltabtc|re-linkzfly).xyz|offerinfo.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?((cryptosparatodos|placementsmela|nutrisavors|bgmtelugucreations|soundaudioguru|howtoconcepts).com|(insurancepost|financeandinsurance|tecnotech|healthmedic).xyz|paidinsurance.in)(\\/.*)/","/^(https?:\\/\\/)(.+)?((netflixrelease|mangareleasedate|freemodapp|cryptoprolife|diethim|zutiza|hitjankari|phixshop|mp4news|trancebazar|taazaalerts|mazheshetkari|uskloans|ssbytes).com|(rontymobile|myfirstname|djrajurjm|ignoupur).in|mdsuuniversity.org|odishadjs.link)(\\/.*)/","/^(https?:\\/\\/)(.+)?((crypto2u|bestcoinsites).xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?((howifx|vocalley|financerites|yogablogfit|healthfirstweb|junkyponk|mythvista|webhostsec).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((viralxns|uploadsoon).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(ouo.io|ouo.press)(\\/.*)/","/^(https?:\\/\\/)(.+)?(largestpanel.in|earnme.club|usanewstoday.club)(\\/.*)/","/^(https?:\\/\\/)(.+)?(paste1s.com|note1s.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(yoshare.net|olhonagrana.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mrproblogger.com|themezon.net)(\\/.*)/","/^(https?:\\/\\/)(.+)?(forex-golds.com|forex-trnd.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(coincroco.com|surflink.tech)(\\/.*)/","/^(https?:\\/\\/)(.+)?(bcvc.xyz|bcvc.ink)(\\/.*)/","/^(https?:\\/\\/)(.+)?(bitcoinfaucet.fun|freebitcoin.win)(\\/.*)/","/^(https?:\\/\\/)(.+)?((webhostingpost|tophostingapp|digitalmarktrend).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(techmny.com|unblockedgames.world)(\\/.*)/","/^(https?:\\/\\/)(.+)?((chooyomi|blogmado|kredilerim|insuranceleadsinfo).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((kiktu|techcyan).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((fc-lc|loaninsurehub).com|fc-lc.xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(examkhata.com|gamelopte.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(rancah.com|menjelajahi.com|shortly.xyz|nyawang.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(khaddavi.net|contentmenarik.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(azmath.info|expertvn.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((nregajobcard|pradhanmantriupdates).in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(ez4mods.com|tech5s.co)(\\/.*)/","/^(https?:\\/\\/)(.+)?((creditsalah|dissenttimes).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((bnbfree|freeth|freebitco).in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mhma12.tech|hasri.xyz|soft3arbi.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((120898|141989|161989|131989|121989|151989).xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?((coinsward|blogsward).com|imbb.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?(1bit.space|mgnet.xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(uptobhai\\.*|uplinkto\\.*|shortlinkto\\.*)/","/^(https?:\\/\\/)(.+)?((exeo|exego).app|(mrgec|emxaw|ijvam).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((on-scroll|diudemy|maqal360).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((forexrw7|forex-articles|3rabsports|fx-22).com|gold-24.net|bedrat.xyz|(maos4alaw|offeergames|todogame).online)(\\/.*)/","/^(https?:\\/\\/)(.+)?((leaveadvice|mensventure).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(jameeltips.us|cryptonworld.space)(\\/.*)/","/^(https?:\\/\\/)(.+)?(hynews.biz|chamcuuhoc.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(tii.la|oei.la|iir.la)(\\/.*)/","/^(https?:\\/\\/)(.+)?((travelironguide|businesssoftwarehere|softwaresolutionshere|freevpshere).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((kongutoday|proappapk|hipsonyc|teamtechnews).com|finsurances.co|yotrickslog.tech|animalwallpapers.online)(\\/.*)/","/^(https?:\\/\\/)(.+)?(deportealdia.live|noweconomy.live|techgeek.digital)(\\/.*)/","/^(https?:\\/\\/)(.+)?(writedroid.eu.org|modmania.eu.org|writedroid.in|mytop5.club)(\\/.*)/","/^(https?:\\/\\/)(.+)?(offers4crypto.xyz|ewall.biz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(copy-paste-fonts.com|cryptednews.space)(\\/.*)/","/^(https?:\\/\\/)(.+)?((remixsounds|helpowi|helpdeep|thinksrace|tipsloanusa).com|(remixone|webseriesreel).in|uprwssp.org|securitywaittimes.us)(\\/.*)/","/^(https?:\\/\\/)(.+)?(shrinke\\.*|shrinkme\\.*|(linkvhoriz|paid4link|icashfly).com|bicolink.net|wordcounter.icu|pwrpa.cc|paylinks.cloud)(\\/.*)/","/^(https?:\\/\\/)(.+)?(trangchu.news|downfile.site|(techacode|expertvn).com|azmath.info|expertvn.com|aztravels.net|top10cafe.se)(\\/.*)/","/^(https?:\\/\\/)(.+)?(theconomy.me|(askpaccosi|halosenja|sainny|wellness4live).com|(2the|techbeast).space|(wikiversity|inicerita).online|cryptomonitor.in|break.id)(\\/.*)/","/^(https?:\\/\\/)(.+)?((theconomy|nightfaucet).me|(imagenesderopaparaperros|linclik|up4cash|smoner|atglinks).com|happy-living.online|galaxy-link.space|oke.io|bitss.sbs|(forextrader|foxylinks).site|tinygo.co)(\\/.*)/","/^(https?:\\/\\/)(.+)?((blogscare|blogtechh|host2loan|techbixby|wp2host).com|enit.in|clk.wiki|(oko|aii).sh|moonboom.net|lnbz.la|clk.kim)(\\/.*)/","/^(https?:\\/\\/)(.+)?(techyreviewx.com|desiupload.co)(\\/.*)/","/^(https?:\\/\\/)(.+)?((calmgram|adbitfly|blogsward).com|adbitfly.in)(\\/.*)/","/^(https?:\\/\\/)(.+)?((exactpay|dinheirocrypto).online|videoclip.info|sproutworkers.co|coinsfaucet.fun)(\\/.*)/","/^(https?:\\/\\/)(.+)?((crypto4yu|manofadan|wiour).com|btcbitco.in|readbitcoin.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?((btcpany|zombiebtc|claimfey|thefastpost).com|(battleroyal|panytourism|statepany).online)(\\/.*)/","/^(https?:\\/\\/)(.+)?(donia2tech.com|blog.techeysub.online|minersim.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(teknosimple.com|besargaji.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(hunterkiller.me|surflink.tech)(\\/.*)/","/^(https?:\\/\\/)(.+)?(lyricsbaazaar.com|ezeviral.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((sekilastekno|miuiku|vebma|majalahhewan).com|crm.cekresi.me|ai.tempatwisata.pro)(\\/.*)/","/^(https?:\\/\\/)(.+)?((wooseotools|woowebtools).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((pernahsukses|alpinecorporate).com|aoutoqw.xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(altechen.com|entutes.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((mobi2c|healthy4pepole|healdad|world2our|mobitaak|te-it|businessnews-nigeria|govaf|fahmysport).com|(hightrip|fx-gd|world-trips|otechno|bluetechno|to-travel).net|(newforex|forexit).online)(\\/.*)/","/^(https?:\\/\\/)(.+)?((anhdep24|nguyenvanbao|xemsport|byboe|asideway).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(web1s.co|web1s.info|app.covemarkets.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((hookeaudio|pennbookcenter|publicananker|fun88bk).com|fun88.info.vn)(\\/.*)/","/^(https?:\\/\\/)(.+)?(stfly.(cc|xyz|biz)|(techtrendmakers|gadnest|optimizepics).com|(blogbux|blogesque|exploreera|explorosity|torovalley).net)(\\/.*)/","/^(https?:\\/\\/)(.+)?(slinkware.com|aghtas.com|youssefsayed.com|alghtas.xyz|newworldnew.com|tackaway.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(link.goto.com.np|(appkamods|bankvacency|mealcold|otomi-games).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(hamrolekh.com|(mgame|oncoin).info|lifeinsurancesblog.xyz|nishankhatri.com.np|quanngon.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?((ashrfd|tpayr|poqzn|ashrfd|rezsx|tryzt|rezst|erzar|waezm|waezg).xyz|(tiktokrealtime|dawenet|vivuq|swgop|vbnmll|dshytb).com|(sinonimos|antonimos).de|quesignifi.ca|tiktokcounter.net|(lifgam|telcoinfo).online|blackwoodacademy.org|cryptednews.space|mobprice.shop)(\\/.*)/","/^(https?:\\/\\/)(.+)?((awgrow|fadedfeet|kenzo-flowertag|homeculina|ineedskin|alightmotionlatest|auntmanny|mytechcontent|techymatic|gamedouc|unhearduniversity).com|worldtanr.xyz|lawyex.co|yexolo.net|mdn.lol|(aayurvedshastra|allnewspoint).in|chefslink.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?(short.croclix.me|adz7short.space)(\\/.*)/","/^(https?:\\/\\/)(.+)?(adshnk.com|adshrink.it)(\\/.*)/","/^(https?:\\/\\/)(.+)?(vikashmewada.com|videoslyrics.com|crazysonglyrics.com|videolyrics.in|newsharsh.com|trxking.xyz|crazyblog.in|getdashcoin.io)(\\/.*)/","/^(https?:\\/\\/)(.+)?(sama-pro.com|mikl4forex.com|dr-forex.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(thebloggerspoint.in|ezeviral.com|fixno.in|technocubes.in)(\\/.*)/","/^(https?:\\/\\/)(.+)?(xonnews.net|toilaquantri.com|share4u.men|camnangvay.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(offrcms.xyz|kooora365.online|tourismtravels4.sbs|5tl.co|mamahawa.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(geniussolutions.co|pokemonroms.cc|alightmotionlatest.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(bluemedialink.online|bluemediafile\\.*)/","/^(https?:\\/\\/)(.+)?(nulledlist.info|earnash.com|my-coins.xyz|earn-bitcoin.online|zimabadko.com|vidoza.xyz|every-crypto.info)(\\/.*)/","/^(https?:\\/\\/)(.+)?((starxinvestor|hit-films|sevenjournals|funkeypagali|viewmyknowledge|wikifilmia|nayisahara|careersides|edukaroo).com|(iisfvirtual|bookszone|learnmany).in)(\\/.*)/","/^(https?:\\/\\/)(.+)?((financenube|mixrootmods|pastescript|trimorspacks|apklox).com|updrop.link)(\\/.*)/","/^(https?:\\/\\/)(.+)?((disheye|kreatifparenting|phimne|admediaflex|cdrab).com|(gurumu|wpcheap|izseo|adcrypto|daycash).net|(sportweb|ecq|mgame|oncoin).info|savego.org|hbz.us|(djqunjab|alpha-links).in|datacheap.io)(\\/.*)/","/^(https?:\\/\\/)(.+)?(readi.online|mbantul.my.id|blog.qnix.me|videoclip.info|moddingzone.in|crypto-fi.net|claimcrypto.cc|xtrabits.click|(cempakajaya|web9academy|onlineincoms|allsoftdrivers|tribuncrypto|poketoonworld|bioinflu|pubgquotes|bico8).com|(techleets|ourcoincash|studyis|healthysamy).xyz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(dutchycorp.space|dutchycorp.ovh|gtlink.co|seulink.digital|oii.io|hamody.pro|fileku.net|metasafelink.site|(beingtek|fc-lc|10short).com|(zagl|shrinkforearn).in|(kiiw|wordcounter).icu|pwrpa.cc|shurt.pw|(flyad|tapnip).vip|antonimos.de|seulink.online|pahe.plus)(\\/.*)/","/^(https?:\\/\\/)(.+)?(dutchycorp.ovh|beast.ink|ckk.ai|onelinks.nl|(viewfr|shortzon|techsamir|ufacw|gawbne|bitcoinwinco|links.apksvip|namaidani|cutpaid|link1s|postazap|yeifly|kiddyshort|shtfly|cortaly|makemoneywithurl|mtraffics|dz4link|dz-linkk).com|(tmearn|namaidani|cutearn|ccurl|youshort|illink).net|(s2fly|pglink|snaply|megaurl|megafly|linksbanao).in|(wez|shortlinks).info|(shrink|flyzu).icu|(24payu|vielink).top|(terafly|hatelink|cashando|zumpa|tlin|weezo|adnews|botfly|linkdam|ar-goal).me|(jameeltips|mitly).us|(forexly|goldly|insurancly).cc|(beycoin|aku2x|moinsider|satoshi-win).xyz|(wedocrypto|yourtechnology|clickmais|flylinks).online|(short1|urlcash|dglinks).site|(shrinkme|tfly).link|(playstore|adsy|clik|shurt).pw|short.express|cryptosh.pro|goo.st|(payskip|shrinkurl).org|cryptotracker.space|shortearn.eu|clicklink.fun|(lootcash|tapnip).vip|addurl.biz)(\\/.*)/","/^(https?:\\/\\/)(.+)?(blitly.io|smartlink.vip)(\\/.*)/","/^(https?:\\/\\/)(.+)?(povathemes.com|escobarvip.cf|golinki.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(apasih.my.id|healthydad.my.id)(\\/.*)/","/^(https?:\\/\\/)(.+)?(techloadz.com|sportsmediaz.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((manga2day|gam3ah|m4cut|soft3arbi|elmokhbir|fatednews|itechmafiia).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?((kienthucrangmieng|chinhnhacoban|tremamnon|coin-free).com|fanclup.info)(\\/.*)/","/^(https?:\\/\\/)(.+)?(nguyenvanbao.com|nghiencar.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(fc-lc.xyz|(webhostingpost|tophostingapp|digitalmarktrend).com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(btcbitco.in|readbitcoin.org|btcsatoshi.net|wiour.com|manofadan.com|crypto4yu.com)(\\/.*)/","/^(https?:\\/\\/)(.+)?(mdn.lol|awgrow.com|fadedfeet.com|kenzo-flowertag.com|homeculina.com|ineedskin.com|worldtanr.xyz|lawyex.co|yexolo.net|chefslink.org)(\\/.*)/","/^(https?:\\/\\/)(.+)?(vailonxx.com|fun88.bio)(\\/.*)/","/^(https?:\\/\\/)(.+)?((aduzz|admediaflex|cryptfaucet|phimne|cdrab|tinybc|tinycmd).com|(bit4me|ecq|sportweb|mgame).info|(wpcheap|offerinfo).net|quanngon.org|datacheap.io)(\\/.*)/","/(bypass.city|adbypass.org)\\/bypass\\?bypass=/","/(mundopolo.net|myfirstdollar.net|adsense.tupaste.top|acorta2.com|web.admoneyclick.net|acortaphd.live|onlypc.net|link.manudatos.com)/","/comohoy.com/","/sphinxanime.com\\/short/","/japanpaw.com\\/out/","/(iconicblogger.com|segurosdevida.site)/","/link.unlockner.com/","/cybercityhelp.in/","/www.akcartoons.in/","/go.moonlinks.in/","/shrinkme.(us|site|cc|vip)/","/test.shrinkurl.org/","/shareus.io/","/shareus\\.io\\/go\\?sid=/","/(verpeliculasonline.org|subtituladas.com)\\/enlace/","/links.cuevana.ac\\/short/","/ouo.io/","/exeo.app|mrgec.com|cety.app/","/fc-lc.(xyz|com)/","/tmail.io/","/1v.to\\/t/","/linkspy.cc\\/tr/","/linkspy.cc\\/\\/a/","/www.ovagames.com\\/.*\\.html$/","/((cybertyrant|profitshort|technorozen|hubdrive.me|bestadvise4u|newztalkies|aiotechnical|cryptonewzhub|techvybes|wizitales|101desires|gdspike|caronwhaley|maxxfour|thewizitale).com|courselinkfree.us|10desires.(org|net)|theapknews.shop|trendzguruji.me|speedynews.xyz|nzarticles.pro|blog.offerboom.top)/","/dropgalaxy.(com|co)\\/drive/","/short-ly.co/","/(shramikcard|pmkisanlists|techishant).in|cookad.net|tejtime24.com/","/blogging.techworldx.net|10beasts.biz/","/starsddl.me\\/short/","/tech.unblockedgames.world/","/seriezloaded.com.ng\\/sl-download\\/\\?link=/","/www.itscybertech.com/","/thegadgetking.in/","/^(https?:\\/\\/)(?!(bypass.city|adbypass.org))(linkvertise.com|(linkvertise|link-to).net)/","/^(https?:\\/\\/)(?!(bypass.city|adbypass.org))(free-content.pro|(ebaticalfel|downbadleaks|megadropsz|megadumpz|stownrusis|iedprivatedqu|megaspremium|premiumstashdrop|teenspremium|utopianleaks|kmendation|eofmukindwo|realiukzemydre).com)|best-links.org\\/s\\?/","/^(https?:\\/\\/)(?!(bypass.city|adbypass.org))(loot-link.com|loot-links.com|lootlink.org|lootlinks.co|lootdest.(info|org|com)|links-loot.com|linksloot.net)\\/s\\?.*$/","/epicload.com\\/files/","/www.gtaall.com\\/get-manual/","/woowebtools.com|pallabmobile.in/","/doodrive.com\\/f/","/ipamod.com\\/redirect-to/","/9xflix\\.(\\w+)\\/m\\/goto/","/bookszone.in/","/yoshare.net/","/blog.disheye.com/","/reminimod.co/","/techrayzer.com/","/techfizia.com/","/tech5s.co/","/ez4mods.com/","/ez4short.com/","/learnmany.in/","/lksfy.in/","/droplink.co/","/lnks.primarchweb.in/","/highkeyfinance.com/","/toonhub4u.net\\/redirect\\/main.php\\?url=/","/toonhub4u\\.net\\/([^\\/]+)\\/$/","/mdsuuniversity.org|instander.me|jameen.xyz|dhamakamusic.ink|eternalcbse.i|financialstudy.me|(foreverhealth|newzwala.co|nhmgujarat|jobkijankari|jobwaala|learnwithsaif|lyricsx|smartsetkari|theringtonesworld|recruitmentrasta|mediniweb|pmyojanasarkari|netflixvip|mghindinews|gentletrail|w3hindi|ryzenmusic).in|(anumin|awolio|cgbsesupport|gptproguide|iplquotes|kaisekareblog|minijankari|news36tech|newsloti|odiamusicsong|sugargliderfaqs|picassoappk|geniuseducares|ndlifestylego|raidersixgameapk|sarkariexam365|potter-world|jankari4u|trancebazar|taazaalerts).com/","/aipebel.com/","/raretoonsindia.rtilinks.com/","/(do|fast).rtilinks.com/","/vidhidepro.com\\/d/","/www.mirrored.to\\/files\\/(?!.*\\?hash=)/","/skyve.io/","/(itradercoin|nichapk|easyworldbusiness|riveh).com/","/blog.filepresident.com/","/gyanigurus.net\\/view/","/mkvmoviespoint.casa\\/goto/","/w.linkspoint.net/","/kingshortener.com/","/gdslink.xyz/","/financeyogi.net/","/jrlinks.in/","/go.tnshort.net/","/www.4fnet.org\\/goto/","/(linkmo.net|adpayl.ink)\\/[^?]+\\?data=.+$/","/musicc.xyz/","/(cravesandflames|codesnse|cloutgist).com/","/go.(cravesandflames|codesnse|cloutgist).com/","/empebau.eu\\/s\\/linker/","/cpmlink.net\\/go/","/10short.com/","/zegtrends.com/","/icutlink.com/","/motakhokhara.blogspot.com/","/xpshort.com/","/jobzspk.xyz/","/urls.cx/","/sunci.net/","/(adclicker.(io|info)|(discoveryultrasecure|yourihollier).com)\\/url/","/antonimos.de|tiktokcounter.net|tiktokrealtime.com|tpayr.xyz|quesignifi.ca|lifgam.online|waezf.xyz|ashrfd.xyz/","/minimilionario.com\\/noticia.php\\?token=/","/usandoapp.com/","/v2links.(com|me)/","/(utkarshonlinetest|newsbawa).com/","/techtnet.com/","/asideway.com/","/web1s.asia\\/api-mode/","/(linkvip|blitly).io/","/^https:\\/\\/megalink.pro\\/[a-zA-Z0-9]+$/","/lnbz.la/","/tii.la|oko.sh|shrinke.me|clk.(wiki|kim)|techy.veganab.co|atglinks.com|linx.cc|get.megaurl.in|wordcounter.icu|exeo.app|pwrpa.cc|(go|get).megafly.in|birdurls.com|blog.graphicuv.com|try2link.com|owllink.net|oei.la|exego.app|link.theflash.eu.org|get.instantearn.in/","/ez4short.com\\/[^\\/]+\\/\\?token=[^\\/]+$/","/shon.xyz/","/veganab.co\\/\\?link=/","/veganab.co/","/camdigest.com/","/tawda.xyz\\/tag/","/pastebin.com\\/raw/","/spacetica.com/","/linegee.net|intercelestial.com/","/(loanoffering|djmp3world).in|moonplusnews.com/","/modijiurl.com/","/4hi.in/","/lnk.news/","/imagereviser.com/","/upshrink.com/","/bangclinic.life/","/dow-dow-dow-dow-dow.xyz\\/download\\/\\?id=/","/ofilmetorrent.com\\/download\\/\\?id=/","/librospdfgratismundo.net/","/besargaji.com/","/moneyblink.com\\/ready\\/go\\?u=/","/dw-anime.net\\/short\\/\\?anonym=/","/fiuxy2.co\\/threads/","/megalinks.info\\/index.php\\?v=/","/ocultandoo.blogspot.com/","/rodimalam.com/","/platinsport.com/","/(ay.live|aylink.co|gitlink.pro)\\/[^\\/]+$/","/(lopteapi.com|1link.vip|blitly.io|web1s.com|megalink.pro)\\/[^\\/]+$/","/short-url.link\\/[^\\/]+$/","/urlx.one\\/[^\\/]+$/","/trimorspacks.com|pastescript.com|updrop.link/","/earnmoneyyt.com/","/sheralinks.com/","/go.bloggingaro.com/","/land.povathemes.com/","/pahe.plus/","/www.(sinsitio.site|dixva.com)\\/code\\/\\?go=/","/www.yitarx.com/","/myshrinker.com/","/thotpacks.xyz/","/linkshortify.in|lksfy.com/","/tumangasdd.com/","/sexyforums.com\\/redirect/","/forum.sexyegirls.to\\/redirect\\?to=/","/paste.japan-paw.net\\/\\?v=/","/pastesmkv.xyz\\/\\?v=/","/ikramlar.online|segurosdevida.site/","/mh.gourlpro.com/","/playpastelinks.com/","/stfly.(cc|xyz|biz)|(techtrendmakers|gadnest|optimizepics).com|(blogbux|blogesque|exploreera|explorosity|torovalley).net/","/ielts-isa.edu.vn/","/flash.getpczone.com/","/surfsees.com|fitnessholic.net/","/cgsonglyricz.in|www.techhubcap.com/","/techyblogs.in|readytechflip.com/","/wp2host.com/","/pahe.win/","/ontechhindi.com/","/newedutopics.com/","/newshuta.in/","/blog.jytechs.in|mi.miuiflash.com|hypershort.com/","/mayas.travel/","/animesgd.net/","/tucinehd.com\\/links/","/render-state.to\\/download\\/\\?link=/","/filecrypt.(cc|co)/","/^(https?:\\/\\/)(?!(bypass.city|adbypass.org))(linkvertise.com|(linkvertise|link-to).net)/","/(loot-link.com|loot-links.com|lootlink.org|lootlinks.co|lootdest.(info|org|com)|links-loot.com|linksloot.net)\\/s\\?.*$/","/(mega-enlace|acortados).com/","/(work.ink|workink.click)\\/.*$/"],"merge_includes":true,"use_matches":[],"orig_matches":["*://*.aprovax.com/*","*://*.lootcash.vip/*","*://*.mixrootmods.com/*","*://*.duplichecke.com/*","*://*.dreamistore.com/*","*://*.mcafee-com.com/*","*://*.techyadjectives.com/*","*://*.cyberstockofficial.in/*","*://*.mkvflix.org/*","*://*.link.bicolink.net/*","*://*.link.vipurl.in/*","*://*.techyinfo.in/*","*://*.infinityskull.com/*","*://*.sakarnewz.com/*","*://*.link.linksfire.co/*","*://*.short.dash-free.com/*","*://*.speedynews.xyz/*","*://*.studyuo.com/*","*://*.olhonagrana.com/*","*://*.dutchycorp.space/*","*://*.ouo.io/*","*://*.linkbox.to/*","*://*.adbtc.top/*","*://*.upload.ee/*","*://*.dddrive.me/*","*://*.uppit.com/*","*://*.krakenfiles.com/*","*://*.gofile.io/*","*://*.karanpc.com/*","*://*.file-upload.net/*","*://*.hexupload.net/*","*://*.rapidgator.net/*","*://*.dbree.me/*","*://*.megaupto.com/*","*://*.dataupload.net/*","*://*.douploads.net/*","*://*.linkerload.com/*","*://*.buzzheavier.com/*","*://*.filemoon.sx/*","*://*.bestfonts.pro/*","*://*.oyroid.com/*","*://*.files.fm/*","*://*.megaup.net/*","*://*.4fnet.org/*","*://*.mp4upload.com/*","*://*.drop.download/*","*://*.workupload.com/*","*://*.send.cm/*","*://*.racaty.io/*","*://*.racedepartment.com/*","*://*.mega4up.org/*","*://*.uploadhaven.com/*","*://*.novafile.org/*","*://*.k2s.cc/*","*://*.ac.totsugeki.com/*","*://*.mega4upload.com/*","*://*.uploady.io/*","*://*.up-load.io/*","*://*.anonym.ninja/*","*://*.vosan.co/*","*://*.apkmody.io/*","*://*.mdfx9dc8n.net/*","*://*.takefile.link/*","*://*.chedrives.com/*","*://*.appsblaze.com/*","*://*.modcombo.com/*","*://*.userupload.net/*","*://*.1fichier.com/*","*://*.fileresources.net/*","*://*.3upload.com/*","*://*.freepreset.net/*","*://*.doodrive.com/*","*://*.gocmod.com/*","*://*.dailyuploads.net/*","*://*.9xupload.asia/*","*://*.mediafire.com/*","*://*.qiwi.gg/*","*://*.sharemods.com/*","*://*.mexa.sh/*","*://*.pdfcoffee.com/*","*://*.adoc.pub/*","*://*.leechpub.com/*","*://*.uploadev.org/*","*://*.rawlazy.si/*","*://*.modsbase.com/*","*://*.dropgalaxy.com/*","*://*.hitfile.net/*","*://*.filedm.com/*","*://*.gogodl.com/*","*://*.turbobit.net/*","*://*.4shared.com/*","*://*.1ink.cc/*","*://*.keeplinks.org/*","*://*.1short.io/*","*://*.earnlink.io/*","*://*.mkomsel.com/*","*://*.onimports.com.br/*","*://*.1shortlink.com/*","*://*.jameeltips.us/*","*://*.post.copydev.com/*","*://*.linegee.net/*","*://*.pro.sh/*","*://*.1bitspace.com/*","*://*.cshort.org/*","*://*.linkpay.cc/*","*://*.kisalt.digital/*","*://*.enlacito.com/*","*://*.webhostingtips.club/*","*://*.shareus.io/*","*://*.adtival.network/*","*://*.dilink.net/*","*://*.ontechhindi.com/*","*://*.sfl.gl/*","*://*.gameblog.in/*","*://*.sharetext.me/*","*://*.btcsatoshi.net/*","*://*.comohoy.com/*","*://*.apkw.ru/*","*://*.programasvirtualespc.net/*","*://*.horoscop.info/*","*://*.bitcotasks.com/*","*://*.fansonlinehub.com/*","*://*.yalifin.xyz/*","*://*.terabox.fun/*","*://*.ayelads.com/*","*://*.karyawan.co.id/*","*://*.icerik.site/*","*://*.ponselharian.com/*","*://*.tonanmedia.my.id/*","*://*.assettoworld.com/*","*://*.adfoc.us/*","*://*.oii.io/*","*://*.cryptonetos.ru/*","*://*.cpu-miner.leaks.work/*","*://*.1link.club/*","*://*.1mlink.vip/*","*://*.zegtrends.com/*","*://*.proviralhost.com/*","*://*.bestadvise4u.com/*","*://*.altblogger.net/*","*://*.linkspy.cc/*","*://*.fexkomin.xyz/*","*://*.100puan.com/*","*://*.sub2get.com/*","*://*.mneyvip.com/*","*://*.jobform.in/*","*://*.go.shareus.in/*","*://*.playpaste.com/*","*://*.suratresmi.id/*","*://*.cryptotracker.space/*","*://*.stfly.me/*","*://*.sapnogalpo.online/*","*://*.leitup.com/*","*://*.offeroc.com/*","*://*.shortearn.net/*","*://*.newassets.hcaptcha.com/*","*://*.alivedesktop.com/*","*://*.mazen-ve3.com/*","*://*.shortearn.net/*","*://*.bigbtc.win/*","*://*.firefaucet.win/*","*://*.tmail.io/*","*://*.skiplink.me/*","*://*.apanmusic.in/*","*://*.o-pro.online/*","*://*.easyworldbusiness.com/*","*://*.getzen.cash/*","*://*.nishankhatri.xyz/*","*://*.computerpedia.in/*","*://*.linkatla.com/*","*://*.myprivatejobs.com/*","*://*.claimfreetrx.online/*","*://*.dl.lk21static.xyz/*","*://*.easylink.gamingwithtr.com/*","*://*.solarchaine.com/*","*://*.revly.click/*","*://*.shorterall.com/*","*://*.playnano.online/*","*://*.rekonise.com/*","*://*.bloginkz.com/*","*://*.bastinews.xyz/*","*://*.autodime.com/*","*://*.amritadrino.com/*","*://*.coinhub.wiki/*","*://*.coinsrev.com/*","*://*.zubatecno.com/*","*://*.adwerty.com/*","*://*.modebaca.com/*","*://*.shopforex.online/*","*://*.freetrx.fun/*","*://*.socialwolvez.com/*","*://*.traffic1s.com/*","*://*.suaurl.com/*","*://*.letsboost.net/*","*://*.coins-town.com/*","*://*.shortit.pw/*","*://*.linkvip.io/*","*://*.ify.ac/*","*://*.lanza.me/*","*://*.lifeezee.com/*","*://*.lolinez.com/*","*://*.file-upload.in/*","*://*.upmienphi.com/*","*://*.linksly.co/*","*://*.cashando.me/*","*://*.appsinsta.com/*","*://*.apkadmin.com/*","*://*.sugarona.com/*","*://*.cekip.site/*","*://*.techleets.xyz/*","*://*.newsturbovid.com/*","*://*.amanguides.com/*","*://*.mirrored.to/*","*://*.flybid.net/*","*://*.8tm.net/*","*://*.cpmlink.net/*","*://*.noodlemagazine.com/*","*://*.huongdanvuotlink123.blogspot.com/*","*://*.maxurlz.com/*","*://*.mohtawaa.com/*","*://*.linksae.com/*","*://*.sub2unlock.com/*","*://*.rockmods.net/*","*://*.doodjob.com/*","*://*.cricketgurupro.com/*","*://*.boost.ink/*","*://*.blog.textpage.xyz/*","*://*.foodupe.com/*","*://*.freethailottery.live/*","*://*.udrop.com/*","*://*.sub2unlock.net/*","*://*.ronakfitness.com/*","*://*.mboost.me/*","*://*.aiimgvlog.fun/*","*://*.autofaucet.dutchycorp.space/*","*://*.gocmod.com/*","*://*.writedroid.in/*","*://*.web1s.com/*","*://*.modmania.eu.org/*","*://*.yalifin.xyz/*","*://*.ruwet.us/*","*://*.hrpunjab.in/*","*://*.autodime.com/*","*://*.zubatecno.com/*","*://*.hiharshit.in/*","*://*.tanytech.com/*","*://*.healthynepal.in/*","*://*.gktech.uk/*","*://*.vslinks.online/*","*://*.factsdunya.com/*","*://*.1apple.xyz/*","*://*.missreview.info/*","*://*.recipejaano.com/*","*://*.dilmibriva.store/*","*://*.caraccidants.xyz/*","*://*.videolyrics.in/*","*://*.blog.topfaucet.us/*","*://*.housezquick.com/*","*://*.flashlinks.online/*","*://*.siteblog.in/*","*://*.trendtrove.vip/*","*://*.shortsnob.in/*","*://*.apna-blog.in/*","*://*.ignitesmm.com/*","*://*.fileku.net/*","*://*.nisnisin.com/*","*://*.sapnogalpo.online/*","*://*.candleoflife.fun/*","*://*.upload.veganab.co/*","*://*.anonbar.com/*","*://*.tamilhit.tech/*","*://*.suntechu.in/*","*://*.loan.techyinfo.in/*","*://*.cryptokaro.co.in/*","*://*.foxbugg.com/*","*://*.tremamnon.com/*","*://*.market.finclub.in/*","*://*.bantenexis.com/*","*://*.techkeshri.com/*","*://*.indirasari.com/*","*://*.wikitraveltips.com/*","*://*.smallinfo.in/*","*://*.pglink.online/*","*://*.mvplaylink.in.net/*","*://*.ww1.linktrims.com/*","*://*.healthynepal.in/*","*://*.missionhight.in/*","*://*.tech.techwhom.com/*","*://*.encurtaclik.com/*","*://*.appkamods.com/*","*://*.cybertechng.com/*","*://*.conghuongtu.net/*","*://*.loan.filmypoints.in/*","*://*.cinemapettai.in/*","*://*.market.gorating.in/*","*://*.blog.anywho-com.com/*","*://*.videoslyrics.com/*","*://*.earn.tensailab.com/*","*://*.postazap.com/*","*://*.mamahawa.com/*","*://*.prakasheditingtamizhan.com/*","*://*.mmdrive.xyz/*","*://*.reminimod.co/*","*://*.tech.filmypoints.in/*","*://*.dpbossreal.com/*","*://*.tbhlabsnews.com/*","*://*.interestingfactsare.com/*","*://*.dealprice.co/*","*://*.djnonstopmusic.in/*","*://*.tech.filohappy.in/*","*://*.vietnamtravelguide.top/*","*://*.earn.hostadviser.net/*","*://*.viralsinfo.com/*","*://*.insuranceinfos.in/*","*://*.www.filmypoints.in/*","*://*.cafe.warrenrahul.in/*","*://*.health.techyinfo.in/*","*://*.techurlshort.in/*","*://*.battleroyal.online/*","*://*.rajdhanimaja.com/*","*://*.iphoto.site/*","*://*.copy-paste-fonts.com/*","*://*.mohtawaa.com/*","*://*.multiup.org/*","*://*.modsfire.com/*","*://*.social-unlock.com/*","*://*.nft.blogyindia.com/*","*://*.my.dropz.xyz/*","*://*.go.blogyindia.com/*","*://*.patak.dropz.xyz/*","*://*.blogyindia.com/*","*://*.sub2unlock.com/*","*://*.crypto.webseriesreel.in/*","*://*.adbull.me/*","*://*.uii.io/*","*://*.shortano.link/*","*://*.shortino.link/*","*://*.clk.st/*","*://*.clks.pro/*","*://*.chainfo.xyz/*","*://*.clicksfly.com/*","*://*.dailytime.store/*","*://*.cryptoflare.cc/*","*://*.ez4short.com/*","*://*.fc.lc/*","*://*.cutp.in/*","*://*.saly.io/*","*://*.earnow.online/*","*://*.exe.io/*","*://*.gplinks.in/*","*://*.linkjust.com/*","*://*.sl.btc25.org/*","*://*.linkfly.me/*","*://*.linksfire.co/*","*://*.adlink.click/*","*://*.gigafly.me/*","*://*.traffic1s.com/*","*://*.link4rev.site/*","*://*.linkrex.net/*","*://*.opli.xyz/*","*://*.www.clink2.com/*","*://*.linksly.co/*","*://*.shortyearn.com/*","*://*.upshrink.com/*","*://*.tr.link/*","*://*.nanolinks.in/*","*://*.megaurl.in/*","*://*.adshort.co/*","*://*.atglinks.comk/*","*://*.shrinkforearn.in/*","*://*.shorti.io/*","*://*.try2link.com/*","*://*.terafly.me/*","*://*.www.wts.pw/*","*://*.web1s.com/*","*://*.rocklinks.net/*","*://*.megafly.in/*","*://*.smartlink.vip/*","*://*.usalink.io/*","*://*.birdurls.com/*","*://*.adrinolinks.in/*","*://*.10short.com/*","*://*.urlpay.in/*","*://*.mdiskshortner.link/*","*://*.cbshort.com/*","*://*.besturl.link/*","*://*.clk.sh/*","*://*.droplink.co/*","*://*.adpaylink.com/*","*://*.botfly.me/*","*://*.paid4link.com/*","*://*.dash-free.com/*","*://*.owllink.net/*","*://*.cuty.io/*","*://*.octolinkz.com/*","*://*.doshrink.com/*","*://*.cashando.me/*","*://*.revly.click/*","*://*.shorterall.com/*","*://*.shrinkearn.com/*","*://*.shrinkme.io/*","*://*.shortox.com/*","*://*.linksfly.link/*","*://*.oii.io/*","*://*.ay.live/*","*://*.timeforearn.com/*","*://*.urlstox.com/*","*://*.lollty.com/*","*://*.okrzone.com/*","*://*.blog.coin2pay.xyz/*","*://*.gamerfang.in/*","*://*.videolyrics.in/*","*://*.coin2pay.xyz/*","*://*.blog.mphealth.online/*","*://*.techrayzer.com/*","*://*.economiarelevante.com.br/*","*://*.mphealth.online/*","*://*.shrs.link/*","*://*.shareus.io/*","*://*.www.gifans.com/*","*://*.zonearn.biz/*","*://*.nulledsafe.com/*","*://*.froggyreviews.com/*","*://*.techmody.io/*","*://*.slink.bid/*","*://*.www.pythondunyasi.com/*","*://*.free4u.nurul-huda.or.id/*","*://*.rotator.nurul-huda.sch.id/*","*://*.jrlinks.in/*","*://*.kiiw.icu/*","*://*.solarchaine.com/*","*://*.hr.vikashmewada.com/*","*://*.sclick.crazyblog.in/*","*://*.ser7.crazyblog.in/*","*://*.freeltc.top/*","*://*.freecrypto.top/*","*://*.insfly.pw/*","*://*.Insfly.pw/*","*://*.mdiskshortner.link/*","*://*.clockads.in/*","*://*.exashorts.fun/*","*://*.cosmic-matter.pw/*","*://*.terafly.me/*","*://*.adnews.me/*","*://*.kyshort.xyz/*","*://*.eazyurl.xyz/*","*://*.linksfly.top/*","*://*.bestlink.pro/*","*://*.playstore.pw/*","*://*.sigmalinks.in/*","*://*.r1.foxylinks.site/*","https://acortalink.me/*","https://paster.so/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":["/^(https?:\\/\\/)(.+)?((advertisingexcel|talkforfitness|rsadnetworkinfo|rsinsuranceinfo|rsfinanceinfo|rssoftwareinfo|rshostinginfo|rseducationinfo|gametechreviewer|vegan4k|phineypet|batmanfactor|techedifier|urlhives|linkhives|github|freeoseocheck|greenenez|aliyun|reddit|bing|yahoo|wiki-topia|edonmanor|vrtier|whatsapp|gearsadviser|edonmanor|tunebug|menrealitycalc|amazon|ebay|payoneer|paypal|skrill|stripe|tipalti|wise|discord|tokopedia|taobao|taboola|aliexpress|netflix|citigroup|spotify|bankofamerica|hsbc|accounts.youtube|(cloud|mail|translate|analytics|accounts|myaccount|contacts|clients6|developers|payments|pay|ogs|safety|wallet).google|(login|signup|account|officeapps|api|mail|hotmail).live|basketballsavvy|healthyfollicles|hauntingrealm|pluginmixer|boredboard|boardgamechick|healthyfollicles).com|(thumb8|thumb9|crewbase|crewus|shinchu|shinbhu|ultraten|uniqueten|topcryptoz|allcryptoz|coinsvalue|cookinguide|cryptowidgets|webfreetools|carstopia|makeupguide|carsmania|nflximg|doubleclick|luckydice).net|(linksfly|shortsfly|urlsfly|wefly|blog24).me|(greasyfork|openuserjs|adarima|telegram|wikipedia).org|mcrypto.club|misterio.ro|insurancegold.in|coinscap.info|chefknives.expert|(shopee|lazada|rakuten|maybank|binance).*|(dana|ovo|bca.co|bri.co|bni.co|bankmandiri.co|desa|(.*).go).id|(.*).(edu|gov))(\\/.*)/"],"merge_excludes":true,"use_connects":[],"orig_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":true}},"storage":{"ts":1721994431620,"data":{}},"enabled":true,"position":1,"file_url":"https://codeberg.org/Amm0ni4/bypass-all-shortlinks-debloated/raw/branch/main/Bypass_All_Shortlinks.user.js","uuid":"09185afa-a837-46d4-b006-6ec2e790a5d5","source":"","resources":[{"meta":{"name":"notyf.min.css","url":"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css","ts":1721994431975,"mimetype":"text/css"},"source":"QC13ZWJraXQta2V5ZnJhbWVzIG5vdHlmLWZhZGVpbnVwezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWSgyNSUpfXRve29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKX19QGtleWZyYW1lcyBub3R5Zi1mYWRlaW51cHswJXtvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMjUlKX10b3tvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMCl9fUAtd2Via2l0LWtleWZyYW1lcyBub3R5Zi1mYWRlaW5sZWZ0ezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWCgyNSUpfXRve29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKX19QGtleWZyYW1lcyBub3R5Zi1mYWRlaW5sZWZ0ezAle29wYWNpdHk6MDt0cmFuc2Zvcm06dHJhbnNsYXRlWCgyNSUpfXRve29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKX19QC13ZWJraXQta2V5ZnJhbWVzIG5vdHlmLWZhZGVvdXRyaWdodHswJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMCl9dG97b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGVYKDI1JSl9fUBrZXlmcmFtZXMgbm90eWYtZmFkZW91dHJpZ2h0ezAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgwKX10b3tvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZVgoMjUlKX19QC13ZWJraXQta2V5ZnJhbWVzIG5vdHlmLWZhZGVvdXRkb3duezAle29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKX10b3tvcGFjaXR5OjA7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMjUlKX19QGtleWZyYW1lcyBub3R5Zi1mYWRlb3V0ZG93bnswJXtvcGFjaXR5OjE7dHJhbnNmb3JtOnRyYW5zbGF0ZVkoMCl9dG97b3BhY2l0eTowO3RyYW5zZm9ybTp0cmFuc2xhdGVZKDI1JSl9fUAtd2Via2l0LWtleWZyYW1lcyByaXBwbGV7MCV7dHJhbnNmb3JtOnNjYWxlKDApIHRyYW5zbGF0ZVkoLTQ1JSkgdHJhbnNsYXRlWCgxMyUpfXRve3RyYW5zZm9ybTpzY2FsZSgxKSB0cmFuc2xhdGVZKC00NSUpIHRyYW5zbGF0ZVgoMTMlKX19QGtleWZyYW1lcyByaXBwbGV7MCV7dHJhbnNmb3JtOnNjYWxlKDApIHRyYW5zbGF0ZVkoLTQ1JSkgdHJhbnNsYXRlWCgxMyUpfXRve3RyYW5zZm9ybTpzY2FsZSgxKSB0cmFuc2xhdGVZKC00NSUpIHRyYW5zbGF0ZVgoMTMlKX19Lm5vdHlme3Bvc2l0aW9uOmZpeGVkO3RvcDowO2xlZnQ6MDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO2NvbG9yOiNmZmY7ei1pbmRleDo5OTk5O2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47YWxpZ24taXRlbXM6ZmxleC1lbmQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kO3BvaW50ZXItZXZlbnRzOm5vbmU7Ym94LXNpemluZzpib3JkZXItYm94O3BhZGRpbmc6MjBweH0ubm90eWZfX2ljb24tLWVycm9yLC5ub3R5Zl9faWNvbi0tc3VjY2Vzc3toZWlnaHQ6MjFweDt3aWR0aDoyMXB4O2JhY2tncm91bmQ6I2ZmZjtib3JkZXItcmFkaXVzOjUwJTtkaXNwbGF5OmJsb2NrO21hcmdpbjowIGF1dG87cG9zaXRpb246cmVsYXRpdmV9Lm5vdHlmX19pY29uLS1lcnJvcjphZnRlciwubm90eWZfX2ljb24tLWVycm9yOmJlZm9yZXtjb250ZW50OiIiO2JhY2tncm91bmQ6Y3VycmVudENvbG9yO2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7d2lkdGg6M3B4O2JvcmRlci1yYWRpdXM6M3B4O2xlZnQ6OXB4O2hlaWdodDoxMnB4O3RvcDo1cHh9Lm5vdHlmX19pY29uLS1lcnJvcjphZnRlcnt0cmFuc2Zvcm06cm90YXRlKC00NWRlZyl9Lm5vdHlmX19pY29uLS1lcnJvcjpiZWZvcmV7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyl9Lm5vdHlmX19pY29uLS1zdWNjZXNzOmFmdGVyLC5ub3R5Zl9faWNvbi0tc3VjY2VzczpiZWZvcmV7Y29udGVudDoiIjtiYWNrZ3JvdW5kOmN1cnJlbnRDb2xvcjtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjNweDtib3JkZXItcmFkaXVzOjNweH0ubm90eWZfX2ljb24tLXN1Y2Nlc3M6YWZ0ZXJ7aGVpZ2h0OjZweDt0cmFuc2Zvcm06cm90YXRlKC00NWRlZyk7dG9wOjlweDtsZWZ0OjZweH0ubm90eWZfX2ljb24tLXN1Y2Nlc3M6YmVmb3Jle2hlaWdodDoxMXB4O3RyYW5zZm9ybTpyb3RhdGUoNDVkZWcpO3RvcDo1cHg7bGVmdDoxMHB4fS5ub3R5Zl9fdG9hc3R7ZGlzcGxheTpibG9jaztvdmVyZmxvdzpoaWRkZW47cG9pbnRlci1ldmVudHM6YXV0bzstd2Via2l0LWFuaW1hdGlvbjpub3R5Zi1mYWRlaW51cCAuM3MgZWFzZS1pbiBmb3J3YXJkczthbmltYXRpb246bm90eWYtZmFkZWludXAgLjNzIGVhc2UtaW4gZm9yd2FyZHM7Ym94LXNoYWRvdzowIDNweCA3cHggMCByZ2JhKDAsMCwwLC4yNSk7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZzowIDE1cHg7Ym9yZGVyLXJhZGl1czoycHg7bWF4LXdpZHRoOjMwMHB4O3RyYW5zZm9ybTp0cmFuc2xhdGVZKDI1JSk7Ym94LXNpemluZzpib3JkZXItYm94O2ZsZXgtc2hyaW5rOjB9Lm5vdHlmX190b2FzdC0tZGlzYXBwZWFye3RyYW5zZm9ybTp0cmFuc2xhdGVZKDApOy13ZWJraXQtYW5pbWF0aW9uOm5vdHlmLWZhZGVvdXRkb3duIC4zcyBmb3J3YXJkczthbmltYXRpb246bm90eWYtZmFkZW91dGRvd24gLjNzIGZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5Oi4yNXM7YW5pbWF0aW9uLWRlbGF5Oi4yNXN9Lm5vdHlmX190b2FzdC0tZGlzYXBwZWFyIC5ub3R5Zl9faWNvbiwubm90eWZfX3RvYXN0LS1kaXNhcHBlYXIgLm5vdHlmX19tZXNzYWdley13ZWJraXQtYW5pbWF0aW9uOm5vdHlmLWZhZGVvdXRkb3duIC4zcyBmb3J3YXJkczthbmltYXRpb246bm90eWYtZmFkZW91dGRvd24gLjNzIGZvcndhcmRzO29wYWNpdHk6MTt0cmFuc2Zvcm06dHJhbnNsYXRlWSgwKX0ubm90eWZfX3RvYXN0LS1kaXNhcHBlYXIgLm5vdHlmX19kaXNtaXNzey13ZWJraXQtYW5pbWF0aW9uOm5vdHlmLWZhZGVvdXRyaWdodCAuM3MgZm9yd2FyZHM7YW5pbWF0aW9uOm5vdHlmLWZhZGVvdXRyaWdodCAuM3MgZm9yd2FyZHM7b3BhY2l0eToxO3RyYW5zZm9ybTp0cmFuc2xhdGVYKDApfS5ub3R5Zl9fdG9hc3QtLWRpc2FwcGVhciAubm90eWZfX21lc3NhZ2V7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6LjA1czthbmltYXRpb24tZGVsYXk6LjA1c30ubm90eWZfX3RvYXN0LS11cHBlcnttYXJnaW4tYm90dG9tOjIwcHh9Lm5vdHlmX190b2FzdC0tbG93ZXJ7bWFyZ2luLXRvcDoyMHB4fS5ub3R5Zl9fdG9hc3QtLWRpc21pc3NpYmxlIC5ub3R5Zl9fd3JhcHBlcntwYWRkaW5nLXJpZ2h0OjMwcHh9Lm5vdHlmX19yaXBwbGV7aGVpZ2h0OjQwMHB4O3dpZHRoOjQwMHB4O3Bvc2l0aW9uOmFic29sdXRlO3RyYW5zZm9ybS1vcmlnaW46Ym90dG9tIHJpZ2h0O3JpZ2h0OjA7dG9wOjA7Ym9yZGVyLXJhZGl1czo1MCU7dHJhbnNmb3JtOnNjYWxlKDApIHRyYW5zbGF0ZVkoLTUxJSkgdHJhbnNsYXRlWCgxMyUpO3otaW5kZXg6NTstd2Via2l0LWFuaW1hdGlvbjpyaXBwbGUgLjRzIGVhc2Utb3V0IGZvcndhcmRzO2FuaW1hdGlvbjpyaXBwbGUgLjRzIGVhc2Utb3V0IGZvcndhcmRzfS5ub3R5Zl9fd3JhcHBlcntkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctdG9wOjE3cHg7cGFkZGluZy1ib3R0b206MTdweDtwYWRkaW5nLXJpZ2h0OjE1cHg7Ym9yZGVyLXJhZGl1czozcHg7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxMH0ubm90eWZfX2ljb257d2lkdGg6MjJweDt0ZXh0LWFsaWduOmNlbnRlcjtmb250LXNpemU6MS4zZW07b3BhY2l0eTowOy13ZWJraXQtYW5pbWF0aW9uOm5vdHlmLWZhZGVpbnVwIC4zcyBmb3J3YXJkczthbmltYXRpb246bm90eWYtZmFkZWludXAgLjNzIGZvcndhcmRzOy13ZWJraXQtYW5pbWF0aW9uLWRlbGF5Oi4zczthbmltYXRpb24tZGVsYXk6LjNzO21hcmdpbi1yaWdodDoxM3B4fS5ub3R5Zl9fZGlzbWlzc3twb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDowO2hlaWdodDoxMDAlO3dpZHRoOjI2cHg7bWFyZ2luLXJpZ2h0Oi0xNXB4Oy13ZWJraXQtYW5pbWF0aW9uOm5vdHlmLWZhZGVpbmxlZnQgLjNzIGZvcndhcmRzO2FuaW1hdGlvbjpub3R5Zi1mYWRlaW5sZWZ0IC4zcyBmb3J3YXJkczstd2Via2l0LWFuaW1hdGlvbi1kZWxheTouMzVzO2FuaW1hdGlvbi1kZWxheTouMzVzO29wYWNpdHk6MH0ubm90eWZfX2Rpc21pc3MtYnRue2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMjUpO2JvcmRlcjpub25lO2N1cnNvcjpwb2ludGVyO3RyYW5zaXRpb246b3BhY2l0eSAuMnMgZWFzZSxiYWNrZ3JvdW5kLWNvbG9yIC4ycyBlYXNlO291dGxpbmU6bm9uZTtvcGFjaXR5Oi4zNTtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlfS5ub3R5Zl9fZGlzbWlzcy1idG46YWZ0ZXIsLm5vdHlmX19kaXNtaXNzLWJ0bjpiZWZvcmV7Y29udGVudDoiIjtiYWNrZ3JvdW5kOiNmZmY7aGVpZ2h0OjEycHg7d2lkdGg6MnB4O2JvcmRlci1yYWRpdXM6M3B4O3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6Y2FsYyg1MCUgLSAxcHgpO3RvcDpjYWxjKDUwJSAtIDVweCl9Lm5vdHlmX19kaXNtaXNzLWJ0bjphZnRlcnt0cmFuc2Zvcm06cm90YXRlKC00NWRlZyl9Lm5vdHlmX19kaXNtaXNzLWJ0bjpiZWZvcmV7dHJhbnNmb3JtOnJvdGF0ZSg0NWRlZyl9Lm5vdHlmX19kaXNtaXNzLWJ0bjpob3ZlcntvcGFjaXR5Oi43O2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMTUpfS5ub3R5Zl9fZGlzbWlzcy1idG46YWN0aXZle29wYWNpdHk6Ljh9Lm5vdHlmX19tZXNzYWdle3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtwb3NpdGlvbjpyZWxhdGl2ZTtvcGFjaXR5OjA7LXdlYmtpdC1hbmltYXRpb246bm90eWYtZmFkZWludXAgLjNzIGZvcndhcmRzO2FuaW1hdGlvbjpub3R5Zi1mYWRlaW51cCAuM3MgZm9yd2FyZHM7LXdlYmtpdC1hbmltYXRpb24tZGVsYXk6LjI1czthbmltYXRpb24tZGVsYXk6LjI1cztsaW5lLWhlaWdodDoxLjVlbX1AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDgwcHgpey5ub3R5ZntwYWRkaW5nOjB9Lm5vdHlmX19yaXBwbGV7aGVpZ2h0OjYwMHB4O3dpZHRoOjYwMHB4Oy13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOi41czthbmltYXRpb24tZHVyYXRpb246LjVzfS5ub3R5Zl9fdG9hc3R7bWF4LXdpZHRoOm5vbmU7Ym9yZGVyLXJhZGl1czowO2JveC1zaGFkb3c6MCAtMnB4IDdweCAwIHJnYmEoMCwwLDAsLjEzKTt3aWR0aDoxMDAlfS5ub3R5Zl9fZGlzbWlzc3t3aWR0aDo1NnB4fX0="}],"requires":[{"meta":{"name":"MonkeyConfig%20Modern%20Reloaded.js","url":"https://update.greasyfork.org/scripts/439099/1203718/MonkeyConfig%20Modern%20Reloaded.js","ts":1721994433144,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"notyf.min.js","url":"https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js","ts":1721994432124,"mimetype":"text/javascript"},"source":""}]}]}
